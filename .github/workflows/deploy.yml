name: Build and Deploy

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'Production'
        type: choice
        options:
          - Development
          - Staging
          - Production
      version:
        description: 'Version to deploy (optional)'
        required: false
        type: string

env:
  NODE_VERSION: '20.x'
  PROJECT_NAME: 'omni-scholar'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'Production' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install Dependencies
      run: |
        npm ci --legacy-peer-deps
        npm install -g @angular/cli
      
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
    
    - name: Build
      run: npm run build -- --configuration=production
      
    - name: Generate version
      id: version
      run: |
        if [ "${{ github.event.inputs.version }}" != "" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=1.0.${{ github.run_number }}" >> $GITHUB_OUTPUT
        fi
        
    # Vercel Deploy steps
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Build for Vercel
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}